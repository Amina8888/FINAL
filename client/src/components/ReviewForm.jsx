// –ú–æ–¥–µ–ª—å –æ—Ç–∑—ã–≤–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ
// –ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API:

// POST /api/review/add ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤

// GET /api/review/specialist/{id} ‚Äî –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
//-------------------------
//  –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∑—ã–≤–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
//  –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
//  üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ backend:
//  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
 
//  –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (IsFinished = true)
 
//  –û—Ç–∑—ã–≤ –µ—â—ë –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω

// üß† Backend –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:
// GET /api/review/check/{consultationId}
// –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:

// json
// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
// {
//   "canReview": true,
//   "alreadyReviewed": false
// }
// POST /api/review/add ‚Äî –¥–æ–ª–∂–µ–Ω:
// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ:

// –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è IsFinished == true

// –ê–≤—Ç–æ—Ä ‚Äî –∫–ª–∏–µ–Ω—Ç

// –û—Ç–∑—ã–≤ –ø–æ —ç—Ç–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –µ—â—ë –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

// –¢–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å

import { useEffect, useState } from "react";

export default function ReviewForm({ consultationId, onSubmitted }) {
    const [canReview, setCanReview] = useState(false);
    const [alreadyReviewed, setAlreadyReviewed] = useState(false);
    const [rating, setRating] = useState(5);
    const [text, setText] = useState("");
    const [submitted, setSubmitted] = useState(false);
    const token = localStorage.getItem("token");
  
    useEffect(() => {
      fetch(`https://localhost:5001/api/review/check/${consultationId}`, {
        headers: { Authorization: `Bearer ${token}` },
      })
        .then((res) => res.json())
        .then((data) => {
          setCanReview(data.canReview);
          setAlreadyReviewed(data.alreadyReviewed);
        });
    }, [consultationId]);
  
    const submitReview = async () => {
      await fetch("https://localhost:5001/api/review/add", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ consultationId, rating, text }),
      });
  
      setSubmitted(true);
      if (onSubmitted) onSubmitted();
    };
  
    if (submitted || alreadyReviewed)
      return <p className="text-green-400">–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!</p>;
  
    if (!canReview) return <p className="text-yellow-400">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.</p>;
  
    return (
      <div className="bg-zinc-700 p-4 rounded mt-6">
        <h3 className="text-lg font-bold mb-2">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</h3>
        <div className="flex gap-2 mb-2">
          {[1, 2, 3, 4, 5].map((s) => (
            <button
              key={s}
              className={s <= rating ? "text-yellow-400" : "text-zinc-500"}
              onClick={() => setRating(s)}
            >
              ‚òÖ
            </button>
          ))}
        </div>
        <textarea
          placeholder="–í–∞—à –æ—Ç–∑—ã–≤"
          className="w-full bg-zinc-800 text-white p-2 rounded mb-2"
          rows={3}
          value={text}
          onChange={(e) => setText(e.target.value)}
        />
        <button
          className="bg-blue-600 px-4 py-1 rounded hover:bg-blue-500"
          onClick={submitReview}
        >
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </button>
      </div>
    );
  }